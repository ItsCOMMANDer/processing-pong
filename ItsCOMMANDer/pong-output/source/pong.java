/* autogenerated by Processing revision 1293 on 2023-10-25 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.io.File;
import java.util.ArrayList;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class pong extends PApplet {




class ButtonData {
    ArrayList<Runnable> buttonHandlers = new ArrayList<>();
    ArrayList<String> buttonFunctionHandlerName = new ArrayList<>();
    ArrayList<Integer> buttonStartX = new ArrayList<>();
    ArrayList<Integer> buttonStartY = new ArrayList<>();
    ArrayList<Integer> buttonEndX = new ArrayList<>();
    ArrayList<Integer> buttonEndY = new ArrayList<>();
}

class MenuButton {
    int startX;
    int startY;
    int endX;
    int endY;
    String text;
    int textSize;
    PFont font;

    MenuButton(int startX, int startY, int endX, int endY, String text, int textSize, PFont font, Runnable functionHandler, String functionHandlerName, ButtonData buttonData) {
        this.startX = startX;
        this.startY = startY;
        this.endX = endX;
        this.endY = endY;
        this.text = text;
        this.textSize = textSize;
        this.font = font;

        buttonData.buttonHandlers.add(functionHandler);
        buttonData.buttonFunctionHandlerName.add(functionHandlerName);
        buttonData.buttonStartX.add(startX);
        buttonData.buttonStartY.add(startY);
        buttonData.buttonEndX.add(endX);
        buttonData.buttonEndY.add(endY);
    }
}

class PongPlayer {
  int colorRed;
  int colorGreen;
  int colorBlue;
  int colorOpacity;
  
  int startX;
  int startY;
  
  int endX;
  int endY;
  
  PongPlayer(int startX, int startY, int endX, int endY, int colorRed, int colorGreen, int colorBlue) {
    this.startX = startX;
    this.startY = startY;
    this.endX = endX;
    this.endY = endY;
    
    this.colorRed = colorRed;
    this.colorGreen = colorGreen;
    this.colorBlue = colorBlue;
    this.colorOpacity = colorOpacity;
  }
}

class PongBall {
  int ballWidth;
  int ballHeight;
  int centerX;
  int centerY;
  
  int colorRed;
  int colorGreen;
  int colorBlue;
  int colorOpacity;
  
  int ballTop;
  int ballBotom;
  int ballLeft;
  int ballRight;
  
  PongBall(int centerX, int centerY, int ballWidth, int ballHeight, int colorRed, int colorGreen, int colorBlue, int colorOpacity) {
    this.centerX = centerX;
    this.centerY = centerY;
    this.ballWidth = ballWidth;
    this.ballHeight = ballHeight;
    
    this.colorRed = colorRed;
    this.colorGreen = colorGreen;
    this.colorBlue = colorBlue;
    this.colorOpacity = colorOpacity;
    
     this.ballTop = this.centerY - ballHeight / 2;
     this.ballBotom = this.centerY + ballHeight / 2;
     this.ballLeft = this.centerX - ballWidth / 2;
     this.ballRight = this.centerX + ballWidth / 2;
  }
}

PFont font;
JSONObject config;

public void setup() {
  //setting up enviroment settring
  /* size commented out by preprocessor */;
  frameRate(-1);

  //checking for existance of config file
  String configFilePath = sketchPath("data/config.json");

  File file = new File(configFilePath);

  if (file.exists()) {
    println("JSON file exists.");
  } else {
    println("JSON file does not exist.");
    exit();
  }
  
  //pulling  data from config file
  config = loadJSONObject("data/config.json");
  String fontFile = config.getString("font");

  //setting up font and text
  font = createFont(fontFile, 32);
  textAlign(CENTER);
  textFont(font, 64);


  background(0x00000000);  

  noFill();
  
}

public void draw() {
  text("Pong", width/2, 64);
  stroke(0xFFFFFFFF);
  rect((width / 2) - 128, 128, 528, 64);
}

public void keyTyped() {
  print(key);
}


  public void settings() { size(1000, 720); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "pong" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
